@use "sass:list";

@import 'config';
@import 'utilities';
@import 'reset-css';
@import 'fonts';
@import 'svg-encode';

body {
  @media (max-width: $media-small) { min-width: $media-width; }
  @media (min-width: $media-big) { min-width: $base-width; }
  background-color: $body-color;
}

.wrapper {
  max-width: $base-width;
  margin: 0 auto;
  padding: 0 $base-paddings;
  box-sizing: border-box;
}

.center {
  text-align: center;
}

.center-flex {
  display: flex;
  align-items: center;
  justify-content: center;
}

%key-font-size {
  font-size: $base-font-size * 2.5;
}

.section-textarea {
  background-color: $primary-color;

  textarea {
    $textarea-padding: 10px;
    $content-width: $base-width - 2 * $base-paddings;

    width: 100% - 2 * $textarea-padding * 100 / $content-width;
    height: 100px;

    margin: {
      top: 50px;
      bottom: 25px;
    }
    padding: $textarea-padding;

    font-family: Consolas, monospace;
    @extend %key-font-size;

    resize: none;
    word-break: break-all;

    box-shadow: 0 0 20px 0px $body-color inset;
  }
}

.section-keyboard {
  background-color: $secondary-color;

  .keyboard {
    // height: 350px;
    padding: 0 50px;
    background-color: $keyboard-color;

    font: {
      family: $font-family;
      size: $base-font-size;
    }
    letter-spacing: $letter-spacing;

    .key {
      position: relative;
      margin-right: 5px;
      color: $keyboard-text-color;
      background-color: $keyboard-bg-color;

      border-radius: $border-radius;

      box-shadow: 2px 3px 3px 2px $keyboard-text-color;

      cursor: pointer;
      user-select: none;

      // &:active {
      //   box-shadow: 0px 1px 3px 0px $keyboard-text-color;
      //   transition: box-shadow 0.15s ease-in;
      //   top: 2px;
      //   left: 2px;
      //   // right: 5px;
      // }
    }

    // set row margins to keys
    @include row-margins();
    // set margins to exact keys before numpad
    @include numpad-margins($row-letters, $positions-list);

    $base-key-width: 54px;
    $base-key-height: 36px;
    $padding-top: 4px;
    $padding-width: 2px;
    %row {
      @media (max-width: $media-small) { 
        display: flex;
        justify-content: center;
      }
      @media (min-width: $media-big) { display: flex; }

      .key {
        width: $base-key-width - 2 * $padding-width;
        height: $base-key-height - 2 * $padding-top;

        padding: $padding-top $padding-width;
      }
    }

    .row-k {
      @extend %row;

      // mixin to create margins for esc, f4, f8, f12
      @include row-k-margins();

      .key {
        @media (max-width: $media-small) {
          &:nth-last-child(-n + 4) {
            display: none;
          }
        }
        @media (min-width: $media-big) {
          &:nth-last-child(-n + 4) {
            width: $base-key-width - 2 * $padding-width;
          }
        }
        
        // Print screen, Scroll lock, Pause break, Insert, Delete, PgUP, PgDN
        @for $i from 14 to 21 {
          &:nth-child(#{$i}) {
            @extend .center;
          }
        }
      }
    }

    .row-e {
      @extend %row;
      @extend %key-font-size;

      .key {
        @extend .center-flex;
        width: $base-key-width * 1.07 - 2 * $padding-width;
        height: $base-key-height * 1.5 - 2 * $padding-top;

        @media (max-width: $media-small) {
          &:nth-last-child(-n + 4) {
            display: none;
          }
        }
        @media (min-width: $media-big) {
          &:nth-last-child(-n + 4) {
            width: $base-key-width - 2 * $padding-width;
          }
        }
      
        // upper comma
        &:nth-child(1) {
          position: relative;
          // font-size: $base-font-size * 5;
          width: $base-key-width * 1.71 - 2 * $padding-width;

          span {
            position: absolute;
            top: 16px;
          }
        }

        // 12 & 18 - minus & numpad minus
        &:nth-child(12) {
          position: relative;
          span {
            position: absolute;
            top: 16px;
          }
        }
        &:nth-child(18) {
          @extend :nth-child(12);
        }

        // numlock
        &:nth-child(15) {
          font-size: $base-font-size * 1.2;
          @extend .center;
        }

        // backspace
        &:nth-child(14) {
          @extend :nth-child(15);
          width: $base-key-width * 2 - 2 * $padding-width;
        }

        // * - asterisk
        &:nth-child(17) {
          position: relative;
          span {
            position: absolute;
            top: 15px;
          }
        }
      }
    }

    .row-d {
      @extend %row;
      @extend %key-font-size;

      position: relative;

      .key {
        @extend .center-flex;
        width: $base-key-width * 1.07 - 2 * $padding-width;
        height: $base-key-height * 1.5 - 2 * $padding-top;

        @media (max-width: $media-small) {
          &:nth-last-child(-n + 4) {
            display: none;
          }
        }
        @media (min-width: $media-big) {
          &:nth-last-child(-n + 4) {
            width: $base-key-width - 2 * $padding-width;
          }
        }

        // &:nth-child(2)::after {
        //   position: absolute;
        //   right: 4px;
        //   bottom: 0;
        //   font-size: 18px;
        //   opacity: 0.75;
        //   content: "й";
        // }

        // &:nth-child(3)::after {
        //   position: absolute;
        //   right: 4px;
        //   bottom: 0;
        //   font-size: 18px;
        //   opacity: 0.75;
        //   content: "ц";
        // }
        
        &:nth-child(1) {
          width: $base-key-width + (100 - $base-row-margins * 3) / 2;
          font-size: $base-font-size * 1.2;

          justify-content: left;
        }

        &:nth-child(14) {
          width: $base-key-width + (100 - $base-row-margins * 3) / 2;
        }

        &:nth-last-child(1) {
          position: absolute;
          right: 10px;
          // 54px (normal size block) * 2 + 5px margin
          height:
            $base-key-height * 1.5 * 2 - 2 * $padding-top + $base-row-margins;
        }

        /* fixes bug with position absolute positioning */
        &:nth-last-child(1) {
          &:active {
            left: unset;
            right: 8px;
          }

          &.key-active {
            left: unset;
            top: 2px;
            right: 8px;
          }
        }
      }
    }

    .row-c {
      @extend %row;
      @extend %key-font-size;

      .key {
        @extend .center-flex;
        width: $base-key-width * 1.07 - 2 * $padding-width;
        height: $base-key-height * 1.5 - 2 * $padding-top;

        @media (max-width: $media-small) {
          &:nth-last-child(-n + 3) {
            display: none;
          }
        }
        @media (min-width: $media-big) {
          &:nth-last-child(-n + 3) {
            width: $base-key-width - 2 * $padding-width;
          }
        }

        &:nth-child(1) {
          width: $base-key-width + (100 - $base-row-margins * 3) / 2; //TODO: CAPS + ENTER widths
          font-size: $base-font-size * 1.2;

          justify-content: left;
        }
        // TODO:
        &:nth-child(13) {
          width: 158px;
          font-size: $base-font-size * 1.2;
        }
      }
    }

    .row-b {
      @extend %row;
      @extend %key-font-size;

      position: relative;

      .key {
        @extend .center-flex;
        width: $base-key-width * 1.07 - 2 * $padding-width;
        height: $base-key-height * 1.5 - 2 * $padding-top;

        @media (max-width: $media-small) {
          &:nth-last-child(-n + 4) {
            display: none;
          }
        }
        @media (min-width: $media-big) {
          &:nth-last-child(-n + 4) {
            display: flex;
            width: $base-key-width - 2 * $padding-width;
          }
        }

        // TODO: ???
        &:nth-child(1) {
          width: 125px;
          font-size: $base-font-size * 1.2;
        }
        &:nth-child(12) {
          width: 130px;
          font-size: $base-font-size * 1.2;
        }

        &:nth-last-child(1) {
          position: absolute;
          right: 10px;
          // 54px (normal size block) * 2 + 5px margin
          height:
            $base-key-height * 1.5 * 2 - 2 * $padding-top + $base-row-margins;
          font-size: $base-font-size * 1.2;
        }

        /* fixes bug with position absolute positioning */
        &:nth-last-child(1) {
          &:active {
            left: unset;
            right: 8px;
          }

          &.key-active {
            left: unset;
            top: 2px;
            right: 8px;
          }
        }
      }
    }

    .row-a {
      @extend %row;
      @extend %key-font-size;

      .key {
        @extend .center-flex;
        width: $base-key-width * 1.07 - 2 * $padding-width;
        height: $base-key-height * 1.5 - 2 * $padding-top;

        @media (max-width: $media-small) {
          &:nth-last-child(-n + 2) {
            display: none;
          }
        }
        @media (min-width: $media-big) {
          &:nth-last-child(-n + 2) {
            display: flex;
            width: $base-key-width - 2 * $padding-width;
          }
        }

        // TODO:
        &:nth-child(1) {
          font-size: $base-font-size * 1.2;
        }
        &:nth-child(2) {
          font-size: $base-font-size * 1.2;
        }
        &:nth-child(3) {
          font-size: $base-font-size * 1.2;
        }
        // SPACE BTN
        &:nth-child(4) {
          font-size: $base-font-size * 1.2;
          width: 396px
        }
        &:nth-child(6) {
          font-size: $base-font-size * 1.2;
        }
        &:nth-child(8) {
          font-size: $base-font-size * 1.2;
        }

        $windows-logo-svg:
          svg-factory-windows-logo($keyboard-text-color, 20, 20);

        .icon-windows-logo {
          background-image: url(svg-encode($windows-logo-svg));
          background-position: center;
          background-repeat: no-repeat;
          width: 100%;
          height: 100%;
        }
      }
    }
  }
}

.section-keyboard {
  &__note {
    margin-top: 15px;
  }

  .keyboard {
    .key {
      &.key-active {
        color: white;

        box-shadow: 0px 1px 3px 0px $keyboard-text-color;
        transition: box-shadow 0.15s ease-in;
        top: 2px;
        left: 2px;
      }

      &:hover {
        background-color: lighten($keyboard-bg-color, 5%);
      }

      &.key-uppercase {
        font-size: $base-font-size * 3.5;
      }
    }
  }
}